{
  "actions": [],
  "advisories": {
    "1103520": {
      "findings": [
        {
          "version": "6.2.1",
          "paths": [
            "vite"
          ]
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/vitejs/vite/security/advisories/GHSA-x574-m823-4x7w\n- https://nvd.nist.gov/vuln/detail/CVE-2025-30208\n- https://github.com/vitejs/vite/commit/315695e9d97cc6cfa7e6d9e0229fb50cdae3d9f4\n- https://github.com/vitejs/vite/commit/80381c38d6f068b12e6e928cd3c616bd1d64803c\n- https://github.com/vitejs/vite/commit/807d7f06d33ab49c48a2a3501da3eea1906c0d41\n- https://github.com/vitejs/vite/commit/92ca12dc79118bf66f2b32ff81ed09e0d0bd07ca\n- https://github.com/vitejs/vite/commit/f234b5744d8b74c95535a7b82cc88ed2144263c1\n- https://github.com/advisories/GHSA-x574-m823-4x7w",
      "created": "2025-03-25T14:00:02.000Z",
      "id": 1103520,
      "npm_advisory_id": null,
      "overview": "### Summary\nThe contents of arbitrary files can be returned to the browser.\n\n### Impact\nOnly apps explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected.\n\n### Details\n`@fs` denies access to files outside of Vite serving allow list. Adding `?raw??` or `?import&raw??` to the URL bypasses this limitation and returns the file content if it exists. This bypass exists because trailing separators such as `?` are removed in several places, but are not accounted for in query string regexes.\n\n### PoC\n```bash\n$ npm create vite@latest\n$ cd vite-project/\n$ npm install\n$ npm run dev\n\n$ echo \"top secret content\" > /tmp/secret.txt\n\n# expected behaviour\n$ curl \"http://localhost:5173/@fs/tmp/secret.txt\"\n\n    <body>\n      <h1>403 Restricted</h1>\n      <p>The request url &quot;/tmp/secret.txt&quot; is outside of Vite serving allow list.\n\n# security bypassed\n$ curl \"http://localhost:5173/@fs/tmp/secret.txt?import&raw??\"\nexport default \"top secret content\\n\"\n//# sourceMappingURL=data:application/json;base64,eyJ2...\n```",
      "reported_by": null,
      "title": "Vite bypasses server.fs.deny when using ?raw??",
      "metadata": null,
      "cves": [
        "CVE-2025-30208"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "vite",
      "vulnerable_versions": ">=6.2.0 <6.2.3",
      "github_advisory_id": "GHSA-x574-m823-4x7w",
      "recommendation": "Upgrade to version 6.2.3 or later",
      "patched_versions": ">=6.2.3",
      "updated": "2025-03-25T14:00:04.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "cwe": [
        "CWE-200",
        "CWE-284"
      ],
      "url": "https://github.com/advisories/GHSA-x574-m823-4x7w"
    },
    "1103631": {
      "findings": [
        {
          "version": "6.2.1",
          "paths": [
            "vite"
          ]
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/vitejs/vite/security/advisories/GHSA-4r4m-qw57-chr8\n- https://github.com/vitejs/vite/commit/59673137c45ac2bcfad1170d954347c1a17ab949\n- https://nvd.nist.gov/vuln/detail/CVE-2025-31125\n- https://github.com/advisories/GHSA-4r4m-qw57-chr8",
      "created": "2025-03-31T17:31:54.000Z",
      "id": 1103631,
      "npm_advisory_id": null,
      "overview": "### Summary\n\nThe contents of arbitrary files can be returned to the browser.\n\n### Impact\nOnly apps explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected.\n\n### Details\n\n- base64 encoded content of non-allowed files is exposed using `?inline&import` (originally reported as `?import&?inline=1.wasm?init`)\n- content of non-allowed files is exposed using `?raw?import`\n\n`/@fs/` isn't needed to reproduce the issue for files inside the project root.\n\n### PoC\n\nOriginal report (check details above for simplified cases):\n\nThe ?import&?inline=1.wasm?init ending allows attackers to read arbitrary files and returns the file content if it exists.  Base64 decoding needs to be performed twice\n```\n$ npm create vite@latest\n$ cd vite-project/\n$ npm install\n$ npm run dev\n```\n\nExample full URL `http://localhost:5173/@fs/C:/windows/win.ini?import&?inline=1.wasm?init`",
      "reported_by": null,
      "title": "Vite has a `server.fs.deny` bypassed for `inline` and `raw` with `?import` query",
      "metadata": null,
      "cves": [
        "CVE-2025-31125"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "vite",
      "vulnerable_versions": ">=6.2.0 <6.2.4",
      "github_advisory_id": "GHSA-4r4m-qw57-chr8",
      "recommendation": "Upgrade to version 6.2.4 or later",
      "patched_versions": ">=6.2.4",
      "updated": "2025-03-31T23:32:55.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "cwe": [
        "CWE-200",
        "CWE-284"
      ],
      "url": "https://github.com/advisories/GHSA-4r4m-qw57-chr8"
    },
    "1103753": {
      "findings": [
        {
          "version": "6.2.1",
          "paths": [
            "vite"
          ]
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/vitejs/vite/security/advisories/GHSA-xcj6-pq6g-qj4x\n- https://nvd.nist.gov/vuln/detail/CVE-2025-31486\n- https://github.com/vitejs/vite/commit/62d7e81ee189d65899bb65f3263ddbd85247b647\n- https://github.com/vitejs/vite/blob/037f801075ec35bb6e52145d659f71a23813c48f/packages/vite/src/node/plugins/asset.ts#L285-L290\n- https://github.com/advisories/GHSA-xcj6-pq6g-qj4x",
      "created": "2025-04-04T14:20:05.000Z",
      "id": 1103753,
      "npm_advisory_id": null,
      "overview": "### Summary\n\nThe contents of arbitrary files can be returned to the browser.\n\n### Impact\n\nOnly apps explicitly exposing the Vite dev server to the network (using --host or [server.host config option](https://vitejs.dev/config/server-options.html#server-host)) are affected..\n\n### Details\n\n#### `.svg`\n\nRequests ending with `.svg` are loaded at this line.\nhttps://github.com/vitejs/vite/blob/037f801075ec35bb6e52145d659f71a23813c48f/packages/vite/src/node/plugins/asset.ts#L285-L290\nBy adding `?.svg` with `?.wasm?init` or with `sec-fetch-dest: script` header, the restriction was able to bypass.\n\nThis bypass is only possible if the file is smaller than [`build.assetsInlineLimit`](https://vite.dev/config/build-options.html#build-assetsinlinelimit) (default: 4kB) and when using Vite 6.0+.\n\n#### relative paths\n\nThe check was applied before the id normalization. This allowed requests to bypass with relative paths (e.g. `../../`).\n\n### PoC\n\n```bash\nnpm create vite@latest\ncd vite-project/\nnpm install\nnpm run dev\n```\n\nsend request to read `etc/passwd`\n\n```bash\ncurl 'http://127.0.0.1:5173/etc/passwd?.svg?.wasm?init'\n```\n\n```bash\ncurl 'http://127.0.0.1:5173/@fs/x/x/x/vite-project/?/../../../../../etc/passwd?import&?raw'\n```",
      "reported_by": null,
      "title": "Vite allows server.fs.deny to be bypassed with .svg or relative paths",
      "metadata": null,
      "cves": [
        "CVE-2025-31486"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "vite",
      "vulnerable_versions": ">=6.2.0 <6.2.5",
      "github_advisory_id": "GHSA-xcj6-pq6g-qj4x",
      "recommendation": "Upgrade to version 6.2.5 or later",
      "patched_versions": ">=6.2.5",
      "updated": "2025-04-04T14:20:06.000Z",
      "cvss": {
        "score": 5.3,
        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
      },
      "cwe": [
        "CWE-200",
        "CWE-284"
      ],
      "url": "https://github.com/advisories/GHSA-xcj6-pq6g-qj4x"
    },
    "1103887": {
      "findings": [
        {
          "version": "6.2.1",
          "paths": [
            "vite"
          ]
        }
      ],
      "found_by": null,
      "deleted": null,
      "references": "- https://github.com/vitejs/vite/security/advisories/GHSA-356w-63v5-8wf4\n- https://nvd.nist.gov/vuln/detail/CVE-2025-32395\n- https://github.com/vitejs/vite/commit/175a83909f02d3b554452a7bd02b9f340cdfef70\n- https://github.com/advisories/GHSA-356w-63v5-8wf4",
      "created": "2025-04-11T14:06:03.000Z",
      "id": 1103887,
      "npm_advisory_id": null,
      "overview": "### Summary\nThe contents of arbitrary files can be returned to the browser if the dev server is running on Node or Bun.\n\n### Impact\nOnly apps with the following conditions are affected.\n\n- explicitly exposing the Vite dev server to the network (using --host or [server.host config option](https://vitejs.dev/config/server-options.html#server-host))\n- running the Vite dev server on runtimes that are not Deno (e.g. Node, Bun)\n\n### Details\n\n[HTTP 1.1 spec (RFC 9112) does not allow `#` in `request-target`](https://datatracker.ietf.org/doc/html/rfc9112#section-3.2). Although an attacker can send such a request. For those requests with an invalid `request-line` (it includes `request-target`), the spec [recommends to reject them with 400 or 301](https://datatracker.ietf.org/doc/html/rfc9112#section-3.2-4). The same can be said for HTTP 2 ([ref1](https://datatracker.ietf.org/doc/html/rfc9113#section-8.3.1-2.4.1), [ref2](https://datatracker.ietf.org/doc/html/rfc9113#section-8.3.1-3), [ref3](https://datatracker.ietf.org/doc/html/rfc9113#section-8.1.1-3)).\n\nOn Node and Bun, those requests are not rejected internally and is passed to the user land. For those requests, the value of [`http.IncomingMessage.url`](https://nodejs.org/docs/latest-v22.x/api/http.html#messageurl) contains `#`. Vite assumed `req.url` won't contain `#` when checking `server.fs.deny`, allowing those kinds of requests to bypass the check.\n\nOn Deno, those requests are not rejected internally and is passed to the user land as well. But for those requests, the value of `http.IncomingMessage.url` did not contain `#`. \n\n### PoC\n```\nnpm create vite@latest\ncd vite-project/\nnpm install\nnpm run dev\n```\nsend request to read `/etc/passwd`\n```\ncurl --request-target /@fs/Users/doggy/Desktop/vite-project/#/../../../../../etc/passwd http://127.0.0.1:5173\n```",
      "reported_by": null,
      "title": "Vite has an `server.fs.deny` bypass with an invalid `request-target`",
      "metadata": null,
      "cves": [
        "CVE-2025-32395"
      ],
      "access": "public",
      "severity": "moderate",
      "module_name": "vite",
      "vulnerable_versions": ">=6.2.0 <6.2.6",
      "github_advisory_id": "GHSA-356w-63v5-8wf4",
      "recommendation": "Upgrade to version 6.2.6 or later",
      "patched_versions": ">=6.2.6",
      "updated": "2025-04-11T14:06:06.000Z",
      "cvss": {
        "score": 0,
        "vectorString": null
      },
      "cwe": [
        "CWE-200"
      ],
      "url": "https://github.com/advisories/GHSA-356w-63v5-8wf4"
    }
  },
  "muted": [],
  "metadata": {
    "vulnerabilities": {
      "info": 0,
      "low": 0,
      "moderate": 4,
      "high": 0,
      "critical": 0
    },
    "dependencies": 1,
    "devDependencies": 0,
    "optionalDependencies": 0,
    "totalDependencies": 1
  }
}
