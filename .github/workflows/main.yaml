name: Tests

on: [push, pull_request]

permissions:
  contents: read # access to check out code and install dependencies

defaults:
  run:
    shell: bash

jobs:
  lint_typecheck_test_poetry_plugin:
    name: ${{ matrix.os }} / ${{ matrix.python-version }} ${{ matrix.suffix }}
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        os: [Ubuntu, macOS, Windows]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - os: Ubuntu
            image: ubuntu-latest
          - os: Windows
            image: windows-2022
          - os: macOS
            image: macos-14
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Get full Python version
        id: full-python-version
        run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y

      - name: Update PATH
        if: ${{ matrix.os != 'Windows' }}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Path for Windows
        if: ${{ matrix.os == 'Windows' }}
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: ./src/poetry_plugin/.venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        working-directory: ./src/poetry_plugin
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        working-directory: ./src/poetry_plugin
        run: poetry install --with github-actions

      - name: Run mypy
        working-directory: ./src/poetry_plugin
        run: poetry run mypy

      - name: Run ruff
        working-directory: ./src/poetry_plugin
        run: poetry run ruff check .

      - name: Run pytest
        working-directory: ./src/poetry_plugin
        run: poetry run pytest -v


  lint_typecheck_test_webui:
    name: Web UI Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: src/webui/package-lock.json
      - run: npm run webui:install
      - run: npm run webui:lint
      - run: npm run webui:type-check
      - run: npm run webui:build
